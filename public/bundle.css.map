{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/components/AdminPanel.svelte",
    "../src/components/CreateHIT.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import toast from 'bulma-toast';\n  import { auth } from '../utils.js';\n  import Home from './Home.svelte';\n  import HITs from './HITs.svelte';\n  import CreateHIT from './CreateHIT.svelte';\n  import Participants from './Participants.svelte';\n\n  export let cred;\n  let currentState = 'home';\n  let mturk;\n  let loading = false;\n  const stateMap = [\n    {\n      state: 'home',\n      title: 'Home',\n      component: Home\n    },\n    {\n      state: 'hits',\n      title: 'HIT Management',\n      component: HITs\n    },\n    {\n      state: 'firebase-participants',\n      title: 'Participants',\n      component: Participants\n    },\n    {\n      state: 'mturk-createhit',\n      title: 'Create HIT',\n      component: CreateHIT\n    }\n  ];\n\n  $: [currentObj] = stateMap.filter((obj) => obj.state === currentState);\n  $: title = currentObj.title;\n  $: component = currentObj.component;\n\n  const logout = async () => {\n    try {\n      loading = true;\n      await auth.signOut();\n    } catch (error) {\n      console.error(error);\n    }\n    loading = false;\n  };\n\n  const createHIT = () => {\n    console.log('create HIT');\n  };\n\n  const initMTurk = () => {\n    // eslint-disable-next-line no-undef\n    mturk = new AWS.MTurk({\n      region: 'us-east-1',\n      endpoint: 'https://mturk-requester-sandbox.us-east-1.amazonaws.com',\n      accessKeyId: cred.accessKeyId,\n      secretAccessKey: cred.secretAccessKey\n    });\n  };\n\n  const accountBalance = async () => {\n    try {\n      const resp = await mturk.getAccountBalance().promise();\n      toast.toast({\n        message: `Account Balance: $${resp.AvailableBalance}`,\n        type: 'is-primary',\n        position: 'top-center',\n        pauseonHover: true,\n        duration: 5000,\n        animate: { in: 'fadeIn', out: 'fadeOut' }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n</script>\n\n<style>\n  .is-scrollable {\n    overflow-y: auto;\n  }\n\n  .dashboard {\n    display: flex;\n    flex-direction: row;\n  }\n  .dashboard.is-full-height {\n    height: 100vh;\n  }\n  .dashboard-panel {\n    display: flex;\n    flex-direction: column;\n    padding: 2rem 1.5rem;\n    flex: 0 0 25rem;\n    height: 100%;\n  }\n  .dashboard-panel.left {\n    flex: 0 0 25rem;\n  }\n  .dashboard-panel.right {\n    flex: 0 0 25rem;\n  }\n  .dashboard-panel.has-thick-padding {\n    padding: 3rem 2rem;\n  }\n  .dashboard-panel.is-one-quarter {\n    flex: 0 0 25%;\n  }\n  .dashboard-panel.is-half {\n    flex: 0 0 50%;\n  }\n  .dashboard-panel.is-one-third {\n    flex: 0 0 33.3333333333%;\n  }\n  .dashboard-panel.is-small {\n    flex: 0 0 15rem;\n  }\n  .dashboard-panel.is-medium {\n    flex: 0 0 20rem;\n  }\n  .dashboard-panel.is-large {\n    flex: 0 0 30rem;\n  }\n  .dashboard-panel-header.is-centered,\n  .dashboard-panel-content.is-centered,\n  .dashboard-panel-footer.is-centered {\n    display: flex;\n    justify-content: center;\n  }\n  .dashboard-panel-header {\n    margin-bottom: 2rem;\n  }\n  .dashboard-panel-main {\n    flex: 1;\n  }\n  .dashboard-panel-footer {\n    margin-top: 2rem;\n  }\n  .dashboard-main {\n    display: flex;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n  }\n  .dashboard-main .navbar.is-fixed-top {\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n  }\n  .dashboard-main .footer {\n    flex: 1;\n  }\n</style>\n\n<svelte:head>\n  <script src=\"https://sdk.amazonaws.com/js/aws-sdk-2.590.0.min.js\" on:load={initMTurk}>\n\n  </script>\n</svelte:head>\n<div class=\"dashboard is-full-height\">\n  <div class=\"dashboard-panel is-medium has-thick-padding has-background-grey-lighter\">\n    <header class=\"dashboard-panel-header\">\n      <div class=\"has-text-centered\">\n        <h1 class=\"is-size-3\">Svelte-Turk</h1>\n        <hr />\n      </div>\n    </header>\n    <div class=\"dashboard-panel-content\">\n      <aside class=\"menu has-text-white\">\n        <p class=\"menu-label\">Home</p>\n        <ul class=\"menu-list\">\n          <li>\n            <a href=\"javascript:;\" on:click={() => (currentState = 'home')}>Overview</a>\n          </li>\n          <li>\n            <a href=\"javascript:;\" on:click={accountBalance}>Account Balance</a>\n          </li>\n        </ul>\n        <p class=\"menu-label\">Firebase</p>\n        <ul class=\"menu-list\">\n          <li>\n            <a href=\"javascript:;\" on:click={() => (currentState = 'firebase-participants')}>\n              Participants\n            </a>\n            <a href=\"javascript:;\" on:click={createHIT}>Stimuli</a>\n          </li>\n        </ul>\n        <p class=\"menu-label\">HITs</p>\n        <ul class=\"menu-list\">\n          <li>\n            <a href=\"javascript:;\" on:click={() => (currentState = 'mturk-createhit')}>\n              Create HITs\n            </a>\n          </li>\n          <li>\n            <a href=\"javascript:;\" on:click={createHIT}>Replenish HITs</a>\n          </li>\n          <li>\n            <a href=\"javascript:;\" on:click={createHIT}>End HITs</a>\n          </li>\n          <li>\n            <a href=\"javascript:;\" on:click={createHIT}>Review HITs</a>\n          </li>\n        </ul>\n        <p class=\"menu-label\">Assignments</p>\n        <ul class=\"menu-list\">\n          <li>\n            <a href=\"javascript:;\" on:click={createHIT}>Approve Assignments</a>\n          </li>\n          <li>\n            <a href=\"javascript:;\" on:click={createHIT}>See Assignments</a>\n          </li>\n        </ul>\n        <p class=\"menu-label\">\n          <button class=\"button is-primary\" class:is-loading={loading} on:click={logout}>\n            Log Out\n          </button>\n        </p>\n      </aside>\n    </div>\n  </div>\n  <div class=\"dashboard-main is-scrollable\">\n    <section class=\"section\">\n      <p class=\"title is-size-2\">{title}</p>\n      <hr />\n      <section>\n        <svelte:component this={component} />\n      </section>\n    </section>\n  </div>\n</div>\n",
    "<script>\n  // Create HIT vars\n  let assignmentDuration = 3600;\n  let description = '';\n  let lifetime = 86400;\n  let reward = '1';\n  let title = '';\n  let autoApprovalDelay = 10;\n  let keywords = 'research,experiment';\n  let maxAssignments = 5;\n  let externalURL = 'https://something-autogenerated.netlify.com';\n  let selectedQuals = [];\n  const qualifications = ['> 95% Approval', 'Adult only', 'US Only', 'Masters'];\n\n  $: externalQuestion = `\n  <ExternalQuestion xmlns=\"http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2006-07-14/ExternalQuestion.xsd\">\n  <ExternalURL>${externalURL}</ExternalURL>\n  <FrameHeight>300</FrameHeight>\n  </ExternalQuestion>`;\n\n  // Add qualifications\n  // https://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_QualificationRequirementDataStructureArticle.html#CustomQualificationsandSystemQualifications\n\n  const createHIT = async () => {\n    console.log('create HIT');\n    console.log(\n      assignmentDuration,\n      description,\n      lifetime,\n      reward,\n      title,\n      autoApprovalDelay,\n      keywords,\n      maxAssignments\n    );\n  };\n</script>\n\n<style>\n  .minheight {\n    min-height: 9rem !important;\n  }\n</style>\n\n<div class=\"container\">\n  <form on:submit|preventDefault={createHIT}>\n    <div class=\"columns\">\n      <div class=\"column\">\n        <div class=\"field\">\n          <label class=\"label\">Title</label>\n          <div class=\"control\">\n            <input type=\"text\" class=\"input\" bind:value={title} required />\n          </div>\n        </div>\n      </div>\n      <div class=\"column\">\n        <div class=\"field\">\n          <label class=\"label\">Keywords</label>\n          <div class=\"control\">\n            <input type=\"text\" class=\"input\" bind:value={keywords} required />\n            <p class=\"help\">Comma separated with no spaces</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"column\">\n        <div class=\"field\">\n          <label class=\"label\">Experiment URL</label>\n          <div class=\"control\">\n            <input type=\"text\" class=\"input\" bind:value={externalURL} required />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"columns\">\n      <div class=\"column\">\n        <div class=\"field\">\n          <label class=\"label\">Reward</label>\n          <div class=\"control\">\n            <input type=\"text\" class=\"input\" bind:value={reward} required />\n            <p class=\"help\">Don't include $</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"column\">\n        <div class=\"field\">\n          <label class=\"label\">Approval Delay</label>\n          <div class=\"control\">\n            <input type=\"text\" class=\"input\" bind:value={autoApprovalDelay} required />\n            <p class=\"help\">In seconds</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"column\">\n        <div class=\"field\">\n          <label class=\"label\">Duration</label>\n          <div class=\"control\">\n            <input type=\"text\" class=\"input\" bind:value={assignmentDuration} required />\n            <p class=\"help\">In seconds. Default 1hr.</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"column\">\n        <div class=\"field\">\n          <label class=\"label\">Lifetime</label>\n          <div class=\"control\">\n            <input type=\"text\" class=\"input\" bind:value={lifetime} required />\n            <p class=\"help\">In seconds</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"column\">\n        <div class=\"field\">\n          <label class=\"label\">Max Assignments</label>\n          <div class=\"control\">\n            <input type=\"text\" class=\"input\" bind:value={maxAssignments} required />\n            <p class=\"help\">Number of available HITs</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"columns\">\n      <div class=\"column is-narrow\">\n        <div class=\"field\">\n          <label class=\"label\">Qualifications</label>\n          <div class=\"control\">\n            <div class=\"select is-multiple minheight\">\n              <select multiple bind:value={selectedQuals}>\n                {#each qualifications as qual}\n                  <option value={qual}>{qual}</option>\n                {/each}\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"column\">\n        <div class=\"field\">\n          <label class=\"label\">Description</label>\n          <div class=\"control\">\n            <textarea class=\"textarea minheight\" placeholder=\"\" bind:value={description} required />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"columns\">\n      <div class=\"column\">\n        <div class=\"field\">\n          <div class=\"control\">\n            <button class=\"button is-success\">Create HIT</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAiFE,cAAc,cAAC,CAAC,AACd,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,AACrB,CAAC,AACD,UAAU,eAAe,cAAC,CAAC,AACzB,MAAM,CAAE,KAAK,AACf,CAAC,AACD,gBAAgB,cAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,IAAI,CAAC,MAAM,CACpB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CACf,MAAM,CAAE,IAAI,AACd,CAAC,AAOD,gBAAgB,kBAAkB,cAAC,CAAC,AAClC,OAAO,CAAE,IAAI,CAAC,IAAI,AACpB,CAAC,AAaD,gBAAgB,UAAU,cAAC,CAAC,AAC1B,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,AACjB,CAAC,AAUD,uBAAuB,cAAC,CAAC,AACvB,aAAa,CAAE,IAAI,AACrB,CAAC,AAOD,eAAe,cAAC,CAAC,AACf,OAAO,CAAE,IAAI,CACb,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,KAAK,AACnB,CAAC;AC5GD,UAAU,eAAC,CAAC,AACV,UAAU,CAAE,IAAI,CAAC,UAAU,AAC7B,CAAC"
}